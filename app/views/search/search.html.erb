<% title "Search" %>

<%= form_tag (params[:option] == 'graphs' ? search_path(anchor: "graphs") : search_path), method: "get" do |f| %>
  <div class="form-group">
    <%= label_tag :title %>
    <% if current_user&.can_use_regex_search? %>
      <%= check_box_tag :title_is_regex, 1, params[:title_is_regex] %> <span class="text-muted">regex</span>
      <%= check_box_tag :title_is_inverse_regex, 1, params[:title_is_inverse_regex] %> <span class="text-muted">invert</span>
    <% end %>
    <%= text_field_tag :title, params[:title], placeholder: "*", class: "form-control" %>
  </div>
  <div class="form-group">
    <%= label_tag :body %>
    <% if current_user&.can_use_regex_search? %>
      <%= check_box_tag :body_is_regex, 1, params[:body_is_regex] %> <span class="text-muted">regex</span>
      <%= check_box_tag :body_is_inverse_regex, 1, params[:body_is_inverse_regex] %> <span class="text-muted">invert</span>
    <% end %>
    <%= text_field_tag :body, params[:body], placeholder: "*", class: "form-control" %>
  </div>
  <div class="form-group">
    <%= label_tag :username %>
    <% if current_user&.can_use_regex_search? %>
      <%= check_box_tag :username_is_regex, 1, params[:username_is_regex] %> <span class="text-muted">regex</span>
      <%= check_box_tag :username_is_inverse_regex, 1, params[:username_is_inverse_regex] %> <span class="text-muted">invert</span>
    <% end %>
    <%= text_field_tag :username, params[:username], placeholder: "*", class: "form-control" %>
  </div>
  <div class="form-group">
    <%= label_tag :why %>
    <% if current_user&.can_use_regex_search? %>
      <%= check_box_tag :why_is_regex, 1, params[:why_is_regex] %> <span class="text-muted">regex</span>
      <%= check_box_tag :why_is_inverse_regex, 1, params[:why_is_inverse_regex] %> <span class="text-muted">invert</span>
    <% end %>
    <%= text_field_tag :why, params[:why], placeholder: "*", class: "form-control" %>
  </div>
  <div class="form-group">
    <%= label_tag :or_search, "Use OR for text search (uses AND by default)" %>
    <%= check_box_tag :or_search, 1, params[:or_search] %>
  </div>
  <div class="form-group">
    <% h = HTMLEntities.new %>
    <%= label_tag :site %>
    <%= select_tag :site, options_for_select(Site.select(:site_name, :id).all.order(:site_name).map {|s| [h.decode(s.site_name), s.id] }, params[:site]), class: "form-control", include_blank: "All" %>
  </div>

  <div class="form-group">
    <%= label_tag :post_type %>
    <%= check_box_tag :post_type_include_unmatched, 1, params[:post_type_include_unmatched] %> <span class="text-muted">include unmatched</span>
    <%= select_tag :post_type, options_for_select(%i[question answer], params[:post_type]), class: "form-control", include_blank: "All" %>
  </div>

  <div class="form-group">
    <%= label_tag :feedback %>
    <%= check_box_tag :has_no_feedback, 1, params[:has_no_feedback] %> <span class="text-muted">has no feedback?</span>
    <%= select_tag :feedback, options_for_select(["true positive", "false positive", "NAA", "conflicted"], params[:feedback]), class: "form-control", include_blank: "All" %>
  </div>

  <div class="form-group">
    <%= label_tag :autoflagged %>
    <%= select_tag :autoflagged, options_for_select(["Yes", "No"], params[:autoflagged]), class: "form-control", include_blank: "All" %>
  </div>

  <div class="form-group">
    <%= label_tag :reason %>
    <%= select_tag :reason, options_from_collection_for_select(Reason.all.order(:reason_name), "id", "reason_name", params[:reason]), class: "form-control", include_blank: "All" %>
  </div>

  <div class="form-group">
    <%= label_tag :user_reputation %>
    <div class="form-group row">
      <div class="col-md-1">
        <%= select_tag :user_rep_direction, options_for_select(%w[== <= >=], params[:user_rep_direction]), include_blank: true,
                       class: "form-control" %>
      </div>

      <div class="col-md-1">
        <%= number_field_tag :user_reputation, params[:user_reputation], class: "form-control" %>
      </div>
    </div>
  </div>

  <div class="form-group">
    <%= label_tag :edited, "Edited" %>
    <%= check_box_tag :edited, 1, params[:edited] %>
  </div>

  <%= hidden_field_tag :option, params[:option] if params[:option] == 'graphs' %>

  <%= submit_tag "Search", class: "btn btn-primary" %>
<% end %>

<br />

<% if @results.present? %>
  <ul class="nav nav-tabs">
    <li role="presentation" class="<%= "active" if params[:option].nil? and (params[:feedback_filter].nil? or params[:feedback_filter] == 'all') %>">
      <%= link_to "Results (#{@counts_by_accuracy_group.values.sum})", search_path(request.query_parameters.merge!({option: nil, feedback_filter: nil})) %>
    </li>
    <li class="<%= 'active' if params[:feedback_filter] == 'tp' %>">
      <%= link_to "True positives (#{@counts_by_feedback[:is_tp]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "tp"})) %>
    </li>
    <li class="<%= 'active' if params[:feedback_filter] == 'fp' %>">
      <%= link_to "False positives (#{@counts_by_feedback[:is_fp]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "fp"})) %>
    </li>
    <li class="<%= 'active' if params[:feedback_filter] == 'naa' %>">
      <%= link_to "NAA (#{@counts_by_feedback[:is_naa]})", search_path(request.query_parameters.to_h.merge!({option: nil, feedback_filter: "naa"})) %>
    </li>
    <li role="presentation" class="<%= "active" if params[:option] == "graphs" %>">
      <%= link_to "Graphs", search_path(request.query_parameters.to_h.merge({option: "graphs", anchor: "graphs"})) %>
    </li>
  </ul>

  <% if params[:option].nil? %>
    <table class="table">
      <% @results.each do |post| %>
        <%= render "posts/post", post: post %>
      <% end %>
    </table>
    <div class="text-center">
      <%= will_paginate @results, renderer: BootstrapPagination::Rails %>
      <p class="text-muted">
        <%= link_to "JSON (still subject to paging limits)", search_path(params: request.query_parameters, format: :json) %>
      </p>
    </div>
  <% else %>
    <div id="graphs">
      <% h = HTMLEntities.new %>
      <%= pie_chart @results.group(:site).count.map{ |k,v| {(k.nil? ? "Unknown" : h.decode(k.site_name))=>v} }.reduce(:merge).select{|k,v| k != "Unknown"}.sort_by {|k,v| v}.reverse %>

      <%= line_chart [{name: "True positives", data: @results.where(is_tp: true).group_by_day('`posts`.`created_at`', range: 1.month.ago.to_date..Time.now).count}, {name: "False positives", data: @results.where(is_fp: true).group_by_day('`posts`.`created_at`', range: 1.month.ago.to_date..Time.now).count}], colors: ["green", "red"], library: {"tooltip" => {'shared' => 'true'} } %>
    </div>
  <% end %>
<% end %>

<% if user_signed_in? && current_user.has_role?(:developer) %>
  <div class="panel panel-danger">
    <div class="panel-heading">
      <h4 class="panel-title">Developer</h4>
    </div>
    <div class="panel-body">
      <ul>
        <li><%= link_to "Update site cache", url_for(controller: :developer, action: :update_sites), method: :post,
                data: { confirm: "You're a developer, so I should be assuming you know what you're doing, but: are you sure?" } %></li>
      </ul>
    </div>
  </div>
<% end %>
