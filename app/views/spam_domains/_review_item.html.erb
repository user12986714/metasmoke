<%= render 'review_queues/responses', queue: queue, item: item %>
<% domain = item.reviewable %>
<h3>Domain: <code><%= domain.domain %></code></h3>
<% if user_signed_in? && (current_user.has_role?(:core) || current_user.has_role?(:admin)) %>
  <p>
    <% if current_user.has_role?(:core) %>
      <%= link_to 'Edit', edit_spam_domain_path(domain) %>
    <% end %>
    <% if current_user.has_role?(:admin) %>
      &middot; <%= link_to 'Delete', destroy_spam_domain_path(domain), method: :delete,
                              data: { confirm: 'Are you sure?' }, class: 'text-danger' %>
    <% end %>
  </p>
<% end %>
<div class="clearfix domain-tag-list">
  <p class="pull-left">
    <% if domain.domain_tags.any? %>
      Tagged with:
      <% domain.domain_tags.each do |t| %>
        <%= render 'domain_tags/tag', tag: t, domain: domain %>
      <% end %>
    <% else %>
      <em class="no-tags">No tags.</em>
    <% end %>
  </p>

  <%= form_tag review_add_tag_path, method: :post, class: 'form-inline pull-left review-add-domain-tag', remote: true,
               data: { deduplicate: true } do %>
    <%= hidden_field_tag :domain_id, domain.id %>
    <%= select_tag :tag_name, options_for_select(DomainTag.all.map { |dt| [dt.name, dt.name, { 'data-subtext' => dt.description&.truncate(100) }] }),
                   class: 'selectpicker', include_blank: true %>
    <%= submit_tag 'Add', class: 'btn btn-primary' %>
  <% end %>
</div>
<br/>

<% if domain.whois.present? %>
  <pre><code><%= domain.whois %></code></pre>
<% else %>
  <p><em>No whois data available.</em></p>
<% end %>

<table class="table">
  <tbody>
    <% domain.posts.limit(100).order(id: :desc).includes_for_post_row.each do |post| %>
      <%= render 'posts/post', post: post %>
    <% end %>
  </tbody>
</table>
